---
export interface Props { compact?: boolean }
const { compact = false } = Astro.props as Props;
const formId = `contact-form-${Math.random().toString(36).substr(2, 9)}`;
---

<form action="/api/contact" method="POST" class={compact ? "grid gap-3" : "grid gap-4"}>
  <input type="hidden" name="_ts" value={Date.now().toString()} />
  <div class={compact ? "grid gap-3 md:grid-cols-2" : "grid gap-4 md:grid-cols-2"}>
    <div>
      <label class="block text-sm font-medium text-slate-700">Nombre</label>
      <input name="name" required placeholder="Tu nombre" class="mt-1 w-full rounded-md border px-3 py-2 outline-none focus:ring-2 focus:ring-indigo-500" />
    </div>
    <div>
      <label class="block text-sm font-medium text-slate-700">Email</label>
      <input type="email" name="email" required placeholder="tu@empresa.com" class="mt-1 w-full rounded-md border px-3 py-2 outline-none focus:ring-2 focus:ring-indigo-500" />
    </div>
  </div>
  {compact ? null : (
    <div>
      <label class="block text-sm font-medium text-slate-700">Empresa (opcional)</label>
      <input name="company" placeholder="Nombre de tu empresa" class="mt-1 w-full rounded-md border px-3 py-2 outline-none focus:ring-2 focus:ring-indigo-500" />
    </div>
  )}
  <div class={compact ? "grid gap-3 md:grid-cols-2" : "grid gap-4 md:grid-cols-2"}>
    <div>
      <label class="block text-sm font-medium text-slate-700">Presupuesto</label>
      <select name="budget" class="mt-1 w-full rounded-md border px-3 py-2 outline-none focus:ring-2 focus:ring-indigo-500">
        <option value="no-definido">A definir</option>
        <option value="5-10k">5k–10k USD</option>
        <option value="10-25k">10k–25k USD</option>
        <option value="25-50k">25k–50k USD</option>
        <option value=">50k">50k+ USD</option>
      </select>
    </div>
    <div class="hidden">
      <label>Deja este campo vacío</label>
      <input name="website" autocomplete="off" tabindex="-1" />
    </div>
  </div>
  <div>
    <label class="block text-sm font-medium text-slate-700">Mensaje</label>
    <textarea name="message" required rows={compact ? 3 : 5} placeholder="Cuéntanos sobre tu proyecto" class="mt-1 w-full rounded-md border px-3 py-2 outline-none focus:ring-2 focus:ring-indigo-500"></textarea>
  </div>
  <div class="flex items-center gap-2 text-sm">
    <input id="consent" type="checkbox" name="consent" required class="h-4 w-4" />
    <label for="consent">Acepto ser contactado y la <a href="/privacidad" class="underline hover:no-underline">política de privacidad</a></label>
  </div>
  <button type="submit" id={`submit-${formId}`} class="inline-flex items-center justify-center rounded-md bg-indigo-600 px-5 py-2.5 text-white font-medium hover:bg-indigo-700 disabled:opacity-50" disabled>
    <span class="submit-text">Enviar</span>
    <span class="loading-text hidden">Enviando...</span>
  </button>
</form>

<script>
  // Additional client-side protection
  document.addEventListener('DOMContentLoaded', function() {
    const forms = document.querySelectorAll('form[action="/api/contact"]');
    
    forms.forEach(form => {
      const submitBtn = form.querySelector('button[type="submit"]');
      const submitText = submitBtn?.querySelector('.submit-text');
      const loadingText = submitBtn?.querySelector('.loading-text');
      
      // Enable submit after 2 seconds (human behavior)
      setTimeout(() => {
        if (submitBtn) submitBtn.disabled = false;
      }, 2000);
      
      // Prevent double submission
      form.addEventListener('submit', function(e) {
        if (submitBtn?.disabled) return;
        
        submitBtn.disabled = true;
        submitText?.classList.add('hidden');
        loadingText?.classList.remove('hidden');
        
        // Re-enable after 10 seconds if something goes wrong
        setTimeout(() => {
          submitBtn.disabled = false;
          submitText?.classList.remove('hidden');
          loadingText?.classList.add('hidden');
        }, 10000);
      });
    });
  });
</script>
